{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","style","color","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","btnName","TextForm","useState","text","setText","heading","placeholder","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","length","defaultProps","App","setMode","setBtnName","handleDarkMode","darkObj","setdarkObj","border","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5660008e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { a } from \"react-router-dom\";\r\n// import React, { useState } from 'react'\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${(props.mode==='light' ? 'light': 'black')} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" style={{color: props.mode==='light'?\"black\":\"white\"}} href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" style={{color: props.mode==='light'?\"black\":\"white\"}} aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" style={{color: props.mode==='light'?\"black\":\"white\"}} href=\"/about\">{props.aboutText}</a>\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'white'}`}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            onClick={props.toggleMode}\r\n            type=\"checkbox\"\r\n            id=\"flexSwitchCheckDefault\"\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n            {props.btnName}\r\n          </label>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set Title Here',\r\n  aboutText: 'About'\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  // const handlespaces =()=>{\r\n  //   let newtext = text.trim();\r\n  //   setText(newtext);\r\n  //   };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the text here\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{color: props.mode==='dark'?'white':'black' , backgroundColor: props.mode==='dark'?'#042743':'white'}}\r\n            // style={{color: props.mode==='dark'?'white':'black'}}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n          <button className=\"btn btn-primary my-3 mx-3\" onClick={handleUpClick}>\r\n            Convert to UpperCase\r\n          </button>\r\n          <button\r\n            className=\"btn btn-success my-3 mx-3\"\r\n            onClick={handleLowClick}\r\n          >\r\n            Convert to LowerCase\r\n          </button>\r\n          <button className=\"btn btn-danger my-3 mx-3\" onClick={handleClear}>\r\n            {\" \"}\r\n            CLEAR{\" \"}\r\n          </button>\r\n          {/* <button onClick={handleDarkMode} className=\"btn btn-primary my-3\">\r\n            {buttonName}\r\n          </button> */}\r\n          {/* <button className=\"btn btn-warning my-3 mx-3\" onClick={handlespaces}> Clear Space </button> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>Text Summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words , {text.length} charecters\r\n        </p>\r\n        <h2>Preveiw</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\nimport React, { useState } from 'react'\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [btnName, setBtnName] = useState('Enable Dark Mode')\n\n  const toggleMode=() => {\n    handleDarkMode();\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      setBtnName(\"Enable Dark Mode\");\n      document.body.style.backgroundColor = 'white';\n    } else {\n      setMode(\"dark\");\n      setBtnName(\"Turn Off Dark Mode\");\n      document.body.style.backgroundColor = '#042743';\n    }\n  }\n\n  const handleDarkMode = () => {\n    if (darkObj.color === \"black\") {\n      setdarkObj({\n        color: \"white\",\n        backgroundColor: \"black\",\n        border: \"0.5px solid #0b1eac\",\n      });\n    } else {\n      setdarkObj({\n        color: \"black\",\n        backgroundColor: \"white\",\n      });\n    }\n  };\n  const [darkObj, setdarkObj] = useState({\n    color: \"black\",\n    backgroundColor: \"white\",\n  });\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} btnName={btnName}></Navbar>\n\n      <div className=\"container my-3\">\n      {/* <Switch>\n\n          <Route path=\"/about\">\n            <About darkObj={darkObj}/>\n          </Route>\n\n          <Route path=\"/\">\n          <TextForm heading=\"Enter the Text to Analyze\" mode={mode}/>\n          </Route>\n\n        </Switch> */}\n      {/* <About/> */} \n      <TextForm heading=\"Enter the Text to Analyze\" mode={mode}/>\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}